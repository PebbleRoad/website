/*------------------------------------*\
    RESET
\*------------------------------------*/

/**
* Let’s make the box model all nice, shall we...?
*/
*{
  &,
  &:before,
  &:after{
    box-sizing: border-box;
  }
}

/**
 * The usual...
 */
h1,h2,h3,h4,h5,h6,
p,blockquote,pre,
dl,dd,ol,ul,
form,fieldset,legend,
table,th,td,caption,
hr{
    margin:0;
    padding:0;
}

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],dfn[title]{
    cursor:help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u,ins{
    text-decoration:none;
}

/**
 * Apply faux underline via `border-bottom`.
 */
ins{
    border-bottom:1px solid;
}

/**
 * So that `alt` text is visually offset if images don’t load.
 */
img{
    font-style:italic;
}

/**
 * Give form elements some cursor interactions...
 */
label,
input,
textarea,
button,
select,
option{
    cursor:pointer;
}
    .text-input:active,
    .text-input:focus,
    textarea:active,
    textarea:focus{
        cursor:text;
        outline:none;
    }



/*------------------------------------*\
    $SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/**
 * Base elements
 */
h1,h2,h3,h4,h5,h6,hgroup,
ul,ol,dl,
blockquote,p,address,
table,
fieldset,figure,
pre{
    margin-bottom:$base-spacing-unit;
    margin-bottom:($base-spacing-unit / $base-font-size)*1rem;
    // margin-bottom: 20px;
    // margin-bottom:(20px / $base-font-size)*1rem;
    

    // @include media-query(td){
    //     margin-bottom:$base-spacing-unit-large;
    //     margin-bottom:($base-spacing-unit-large / $base-font-size)*1rem;    
    // }

    .islet &{
        margin-bottom:$base-spacing-unit / 2;
        margin-bottom:(($base-spacing-unit / $base-font-size) / 2)*1rem;
    }
}


/**
 * Doubled up `margin-bottom` helper class.
 */
.landmark{
    margin-bottom:2 * $base-spacing-unit;
    margin-bottom:(2 * $base-spacing-unit / $base-font-size)*1rem;
}


/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
hr{
    margin-bottom:$base-spacing-unit - 2px;
    margin-bottom:(($base-spacing-unit - 2px) / $base-font-size)*1rem;
}


/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
ul,ol,dd{
    margin-left:2 * $base-spacing-unit;
    margin-left:(2 * $base-spacing-unit / $base-font-size)*1rem;
}


/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers:
 * http://juicystudio.com/article/screen-readers-display-none.php
 */

.hidden {
    display: none !important;
    visibility: hidden;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}